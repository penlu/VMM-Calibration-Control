#############################################################################
# Makefile for building: vmmdcs
# Generated by qmake (2.01a) (Qt 4.6.2) on: Fri Mar 21 12:29:37 2014
# Project:  vmmdcs.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -unix -o Makefile vmmdcs.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_NO_DEBUG_OUTPUT
CFLAGS        = -m64 -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I$(ROOTSYS)/include -I$(ROOTSYS)/include/root -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)   -L$(ROOTSYS)/lib -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lGui -lRGL -lMathCore -L$(ROOTSYS)/lib/root -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		sleeper.cpp \
		mythread.cpp \
		tcphandlerthread.cpp \
		tcphandler.cpp moc_mainwindow.cpp \
		moc_mythread.cpp \
		moc_tcphandlerthread.cpp \
		moc_tcphandler.cpp \
		qrc_icons.cpp \
		qrc_calibration_data.cpp
OBJECTS       = main.o \
		mainwindow.o \
		sleeper.o \
		mythread.o \
		tcphandlerthread.o \
		tcphandler.o \
		moc_mainwindow.o \
		moc_mythread.o \
		moc_tcphandlerthread.o \
		moc_tcphandler.o \
		qrc_icons.o \
		qrc_calibration_data.o
DIST          = /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		vmmdcs.pro
QMAKE_TARGET  = vmmdcs
DESTDIR       = 
TARGET        = vmmdcs

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: vmmdcs.pro  /usr/lib64/qt4/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile vmmdcs.pro
/usr/lib64/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile vmmdcs.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/vmmdcs1.0.0 || $(MKDIR) .tmp/vmmdcs1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/vmmdcs1.0.0/ && $(COPY_FILE) --parents mainwindow.h constants.h sleeper.h mythread.h tcphandlerthread.h tcphandler.h .tmp/vmmdcs1.0.0/ && $(COPY_FILE) --parents icons.qrc calibration_data.qrc .tmp/vmmdcs1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp sleeper.cpp mythread.cpp tcphandlerthread.cpp tcphandler.cpp .tmp/vmmdcs1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/vmmdcs1.0.0/ && (cd `dirname .tmp/vmmdcs1.0.0` && $(TAR) vmmdcs1.0.0.tar vmmdcs1.0.0 && $(COMPRESS) vmmdcs1.0.0.tar) && $(MOVE) `dirname .tmp/vmmdcs1.0.0`/vmmdcs1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/vmmdcs1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_mythread.cpp moc_tcphandlerthread.cpp moc_tcphandler.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_mythread.cpp moc_tcphandlerthread.cpp moc_tcphandler.cpp
moc_mainwindow.cpp: constants.h \
		mythread.h \
		tcphandler.h \
		mainwindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_mythread.cpp: constants.h \
		mythread.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) mythread.h -o moc_mythread.cpp

moc_tcphandlerthread.cpp: tcphandlerthread.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) tcphandlerthread.h -o moc_tcphandlerthread.cpp

moc_tcphandler.cpp: constants.h \
		tcphandler.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) tcphandler.h -o moc_tcphandler.cpp

compiler_rcc_make_all: qrc_icons.cpp qrc_calibration_data.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_icons.cpp qrc_calibration_data.cpp
qrc_icons.cpp: icons.qrc \
		logo.png \
		directory.png
	/usr/lib64/qt4/bin/rcc -name icons icons.qrc -o qrc_icons.cpp

qrc_calibration_data.cpp: calibration_data.qrc \
		thresholds_qt.txt \
		boardCalibConstants_qt.txt
	/usr/lib64/qt4/bin/rcc -name calibration_data calibration_data.qrc -o qrc_calibration_data.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/lib64/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		constants.h \
		mythread.h \
		tcphandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		constants.h \
		mythread.h \
		tcphandler.h \
		ui_mainwindow.h \
		sleeper.h \
		tcphandlerthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

sleeper.o: sleeper.cpp sleeper.h \
		constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sleeper.o sleeper.cpp

mythread.o: mythread.cpp mythread.h \
		constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mythread.o mythread.cpp

tcphandlerthread.o: tcphandlerthread.cpp tcphandlerthread.h \
		constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tcphandlerthread.o tcphandlerthread.cpp

tcphandler.o: tcphandler.cpp tcphandler.h \
		constants.h \
		mainwindow.h \
		mythread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tcphandler.o tcphandler.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_mythread.o: moc_mythread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mythread.o moc_mythread.cpp

moc_tcphandlerthread.o: moc_tcphandlerthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tcphandlerthread.o moc_tcphandlerthread.cpp

moc_tcphandler.o: moc_tcphandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tcphandler.o moc_tcphandler.cpp

qrc_icons.o: qrc_icons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_icons.o qrc_icons.cpp

qrc_calibration_data.o: qrc_calibration_data.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_calibration_data.o qrc_calibration_data.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

